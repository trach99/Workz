build 744:
    Add support of SMS-PP Envelope with AES

build 743:
    'Additional Bearer Data Subparameters' field added.

build 742:
    CDMA flavoured envelope packing added.

build 741:
    The size of the buffer used for passing data from a background thread 
    executing an IO-script to the main thread has been increased in size, 
    to avoid the situation where the background thread spends most of its 
    time waiting for the UI to catch up.

build 740:
    When executing a script, commands are now logged to the UI 
    before we match the response data against the "O:" line.

build 739:
    Bugfix: any line of a script file starting with a "/!" will now again 
    be copied verbatim to the session log.

build 738:
    Fixing a bug introduced at build 737: running an IO-script 
    would fail if the 'Reset card at script start' option was left unticked.

build 735 - 737:
    Rewriting the IO-script module to speed things up a bit.

build 734:
    On a Set Up Menu the application wizard no longer shows 
    the menu right away, but instead asks for the result.

    The old behaviour did always puzzle new users (and the decoded 
    command can be found on the "Toolkit Html" tab anyway).

build 733:
    Updating the character tables (so that a Display Text with say 
    the text '</html>' won't mess up the application wizard.

build 731 - 732:
    More work on the application wizard, among other things 
    (i)  page alignment done right, using javascript
    (ii) Get Input now uses a webpage like all the other kids

    Regarding (ii) above, though this implies that the form actually 
    now accepts unicode characters you better not try, things will just 
    fail ungracefully

build 730:
    The application wizard no longer relies on the quirks of IE6 but
    now generates standards-compliant pages (well, tries to).

build 729:
    Faster, Higher, Stronger.

build 728:
    Adding support for the two types of UCS2 packing discussed 
    in 3GPP TS 11.11 Annex B.
    Bugfixing. 

build 727:
    Bugfix: the web server now handles a dropped connection without 
    making any noise.

build 726:
    Getting rid of the constant ticking on a replay session/execute script
    The "New Version" splashscreen has been disabled; it'll come back when 
    things have settled down a bit.
    Fixing a few bugs, among these: read-write access to the application 
    wizard html-file is now protected by a mutex.

build 724 - 725:
    Roll-back to 722, constantly redrawing the UI slows everything
    to a crawl.
    It was a quick and dirty fix that didn't work.

build 723:
    Bugfix (RFC 003):
    When running a script agaist a simulator Wojtek would stop 
    updating the user interface if the simulator always responded 
    in less than 100ms.

build 722:
    Application wizard now adds a 'Back' button below every Select Item.
    All proactive commands are now handled by the application wizard 
    (most of them with little intelligence but lots of bling).
    Bugfixing.

build 721:
    If port 1971 is taken we'll try with 1972, 1973, etc.
    Bugfixing.

build 717 - 720:
    Wojtek now comes with a low-budget web server (why the 
    Windows firewall should have popped up on the first run).

    In order to support UCS2 strings the old application wizard 
    frame with all its western-characters-only components 
    had to go.
    
    It's been replaced by a browser window displaying a web page 
    served at http://localhost:1971/wizard.html 
    (using a fixed port no. is a really bad idea - for the obvious 
    reasons - so that'll change in the next build)

    Right now things stutter a tad...

build 715 - 716:
    Support for UCS2 text string encoding added to the application wizard panel
    So far this only works with Display Text commands, more will follow

build 713 - 714:
    Main menu will now respond to the pressing of the ALT-key
    (and look slightly less Win98-ish)

build 712:
    The interpretation of the Lc/Le field has been changed, 
    allowing us to differentiate between a case 1 command and a 
    case 2 command reading out 256 bytes of response data.

    The following set of rules apply:
    
      DATA field  |  Lc/Le field  |  Command
    --------------+---------------+----------------
      blank       |  blank        |  case 1
      blank       |  not blank    |  case 2
      not blank   |  any          |  case 3                 


build 711:
    Rewiring of the internals - lots of stuff broken.

build 709 - 710:
    Bugfixing

build 708:
    A bit of refactoring

build 707:
    Auto-generated command (as generated by the Application Wizard, 
    the SMS-pp-Download dialog, and the 'Extended Update' dialog) will 
    by default use a Class byte of 0xA0.

    To configure Wojtek to use another value:

    (a) open up regedit
    (b) navigate to HKEY_CURRENT_USER\Software\Logos Smart Card\Wojtek 
    (c) create a new DWORD value named "Non-default CLA byte" holding
        your new value for the CLA byte

build 706:
    The STK API and patch installation dialogs are no more

build 705:
    Bugfixing

build 704:
    Current directory bugfix

build 702 - 703:
    Adding support for HTML-formatted session logs.
    
    Attributes viewtype and url have been added to the <agent /> 
    element:
    
        viewtype="html" | "plain-text" (the latter being the default)
        url=<relative path to the html page to be displayed>
    
    Wojtek will by default create a plain text view for your agent 
    generated output, but if your agent specifies viewtype="html" 
    then we'll instead create a web browser control using the 
    specified URL.
    
    Example:
    --------
    
        <agent addtab="true" name="Toolkit Html" scriptfile=".\HtmlWriter.py" 
               viewtype="html" url="trace.html" />


build 701:
    Bugfix, addtab="false" didn't work


build 700:
    As of today the Wojtek executable itself only ships with 
    a single log window. Any further logs are added using external 
    scripts (and you should in fact have at least two log windows 
    right now).

    Right next to the executable you'll find an XML-file 
    "scriptoteket.xml" where all external scripts are listed 
    (henceforth we'll use the term /agent/ instead).
    
    To make a new agent known to Wojtek, add a new <agent /> to 
    this file, providing the filename of your script, whether or not 
    Wojtek should create a tab for you on the UI, and finally 
    a name (that'll be the caption used on the tabcontrol).
    
    Out of the box any recent Windows installation will support 
    VBScript and JavaScript, but you're free to use any scripting 
    language you prefer, as long as it's been made available to 
    the Windows Scripting Host on your box.
    
    There's quite a few engines floating around out there on the 
    web (take a look at http://www.mvps.org/scripting/languages/)
    but if you're new to scripting and haven't been corrupted 
    by years of Perl hacking ;) then I'd suggest trying out Python
    (see below)

    Your script needs to start out with a comment listing a 
    version of "v0.9", followed by a comment specifying what 
    script language is being used.

    If you're using JavaScript, where "//" marks a comment, the 
    first two lines of your script should read:

    line 1: // v0.9
    line 2: // javascript

    In Python a comment starts with a "#" character, so:

    line 1: # v0.9
    line 2: # python

    Your script needs to provide two methods onReset and onCommand; 
    both taking a string as input and returning a string:

    - onReset gets called on every reset with the 
      answer-to-reset as a hex-string
    - onCommand gets called on every command with two hex-strings 
      separated by a vertical bar, so if the DF_TELECOM is selected 
      you'll get the string "A0A40000027F10|9F16"

    If all goes well the returned string will be added to your 
    log window on the right.

    In addition to a small JavaScript agent (IO log) and a useless 
    VBScript agent (Mr. Eko) the default package comes with a 
    Python script (Toolkit) that'll give you a rough decoding of 
    any proactive command/terminal response.
    
    You'll need a Python interpreter on your box for the latter 
    to work, one that's been registered with the Windows Scripting Host.

    ActivePython will give you all that:
    http://www.activestate.com/activepython/



build 633:
    The old code for decoding proactive commands has been deleted 
    Where the old 'Toolkit' tab used to be you'll now instead find 
    a tab labelled 'scriptoteket'.
    Now the decoding takes place in an external Python script.

build 632 :: McKinney Royal:
    Allowing lines on the form "I: CLA INS P1 P2" in IO scripts
    (the above will at some point in the future be the _only_
    way to write a case 1 command)

build 631:
    Keeping the Log Window font between sessions

build 630:
    -n

build 629:
    PCSC dll cleaning up. 
    No longer reporting an outdated answer to reset.

build 628:
    Data input edit box now behaves slightly less schizophrenic
    (among other things: it no longer ignores lowercase letters 
    on a copy and paste).

build 627:
    Class byte used by the application wizard now configurable. 

    To replace the default value of 0xA0:
    - open up regedit
    - navigate to HKEY_CURRENT_USER\Software\Logos Smart Card\Wojtek 
    - create the DWORD value "Non-default CLA byte"

build 626:
    Application wizard now ignores a newline on a GET INPUT.

build 625:
    'Bug' in the logging of timing information fixed.
    Using QueryPerformanceCounter instead of GetTickCount.

build 624:
    An empty handler now catches a left click on the form; without this the application 
    would lock up. Very strange indeed...

build 623:
    Fixing the xp caption bar height problem (26px vs. 19px on win2k and older).

build 622:
    Keyboard shortcuts added to Update Binary Extended/Install Patch Extended dialog box.

build 621:
    Bug preventing a shut down fixed.
    About box updated.

build 620:
    Bug in the handling of a rejected FETCH fixed.

build 619:
    Instruction drop down box increased in size.

build 618:
    The application wizard now responds to keyboard beating.
    A few updates to the GUI - style is substance.

build 617:
    Fixed handling of the situation where no PCSC reader is attached.

build 616:
    Instruction drop down box handling changed. Edit fields are updated on-the-fly. 
    Focus is changes when the user hits 'Enter' or 'Space'.

build 615:
    Minor GUI changes. RFU parameter added to dll interface.

build 614:
    Raize components introduced.

build 611 - 613:
    Packaging of commands no longer T=0 protocol specific; hereby concluding the work 
    started with build 597.

build 609 - 610:
    Reader handling moved to dlls, work completed.

build 608:
    PCSC handling moved to a dll.

build 606 - 607:
    Tidying up the CCT handling.
    Any number of COM ports supported.

build 605:
    P1 and P2 set to zero on a 'INSTALL PATCH EXT'

build 603 - 604:
    Face lifted.

build 602:
    Length of buffer on the second call to SCardListReaders now adjusted as well.

build 601:
    Length of the buffer passed on to SCardListReaders increased to something reasonable.
    Closing the application while an open connection to a CCT exists no longer generates a 
    run-time error.

build 600:
    CCT handling moved to a dll.

build 599:
    Tinkering...

build 598:
    Fixing a bug in the PC-HAL layer introduced by build 597. 

build 597:
    Interface to card readers no longer T=0 protocol specific (and probably a few new bugs added)

build 595 - 596:
    Internal tinkering continues...

build 594:
    UPDATE BINARY EXTENDED: Access to read-only binaries fixed.

build 593:
    Reworking the internals. Just getting started. Card reader access 
    will be moved to dlls. 99% of the job remains...

build 592:
    PC-HAL hack added.

build 591:
    Handy.pas removed from the project.

build 590:
    Configuration settings form extended; several settings are now stored 
    in the registry between sessions. 

    Low-level IO logging surfaced (when using a PC-CCT connected to a serial 
    port). A short explanation on the usage might be a good idea, here goes:
    On the configuration settings dialog you'll find the checkbox 'Generate 
    debug information (low-level IO logging)'. If you've checked this one 
    every byte send or recieved on the serial port will be output as a debug 
    string together with a timestamp. In order to view this information you'll 
    need to run a debugger, e.g. the one found at
    http://www.sysinternals.com/ntw2k/freeware/debugview.shtml

build 589:
    Bug in the reading of the ATR fixed.

build 588:
    Configuration settings moved to a separate form - work not completed.

build 587:
    CCT timing adjusted; all earlier versions (the very first version 
    included) will time out too late when going from transmission (in 
    the direction CCT to card) to reception.

build 586:
    WIB 1.3 security level 3 messages supported by the updated 03.48 packer.

build 484 - 486:
    Fixing bugs introduced with build 483.

build 483:
    A quick and dirty hack (really dirty, apologies, later...) allows 
    a read binary with P3=0 for getting 256 bytes.

build 481 - 482:
    Tinkering with the internals. T=0 command handling simplified.

build 480:
    A time-out added to the COM port read and write methods.

build 479:
    The rewriting of the COM port handling code continues...
    Still non-overlapped port access, but less resource hugging.

build 478:
    COM port timing altered.

build 475 - 477:
    COM port handling rewritten and simplified.

build 474:
    Concurrent stack pointer removed.

build 473:
    Code for the reading of the ATR updated.

build 472:
    Relaxed timing on ATR reading reintroduced.

build 471:
    Cleaning up of the CCT handling - still a long way to go though.
    CCT LED (green) used to visually indicate an open connection.
    TODO: Use the red LED on character transmission/reception.

build 470:
    NULL byte counting and CCT time-out enabling restored.

build 469:
    PCSC/CCT handling rewritten. 
    Replaying of Aspects logs removed.
    NULL byte counting and CCT time-out enabling momentarily broken.

build 467 - 468:
    Maintenance, PCSC related cleaning up. 

build 466:
    ResetCard and PCSC bug, fixed.

build 465:
    Fixing CTRL+L and CTRL+S shortcuts broken by build 464.

build 464:
    Progressbar replaced...

build 463:
    Time-out mechanism updated.

build 462:
    Script history handling updated.

build 461:
    Using a more intelligent error message if the 03.48 packing fails.

build 460:
    The new version of the 03.48 packer 'MP.EXE' accepts input of the form:

      {package}{SPI}{KIc}{KID}{TAR}{Counter}\
      {RC/CC/DS Key 1}{RC/CC/DS Key 2}{RC/CC/DS Key 3}\
      {Cipher Key 1}{Cipher Key 2}{Cipher Key 3}\
      {Data}

    Wojtek has been updated to support this formatting.

build 459:
    Minor changes to the GUI.

build 458:
    Toolkit window added. Quite a lot to do yet... Currently hardcoded, to be replaced 
    by a collection of user modifiable scripts (VBS/java-script?).

build 457:
    Corrected the handling of an attempt to access a PCSC reader with no card inserted.

build 456:
    Fixing errors introduced with build 455 (use of '*' and '?' in scripts).

build 455:
    Execute script code rewritten. Verbatim commenting using a "/!" added.

build 454:
    Automatic fetching of proactive commands. This feature will be turned on on the very first run, on 
    future sessions the last selected state will be restored.
    Animated GIF replaced by a list of bitmaps (as below), this time included in a resource file.

build 453:
    TGIFImage replaced by a TImageList and a TTimer.

build 452:
    Increasing the no. of entries in the Last Accessed Script File drop down menu, registry keys changed.

build 451:
    Booby-trapped.

build 449-450:
    GUI changes.

build 446-448:
    SMS-pp-download dialog box reworked.
    8-byte MAC supported.

build 445:
    Recompiled in Delphi 7.

build 444:
    Default script file extension changed to scr*

build 441-443:
    Patch Loader update. Adding support for encrypted patch installation.

build 440:
    List of recognized 7-bit characters updated.

build 439:
    Tab order corrected.
    Icon changed.

build 438:
    Display Text support added to the Application Wizard.
    TODO: Automated TERMINAL PROFILE download and FETCH - or ?

build 437:
    Application Wizard integrated with the main GUI.

build 436:
    Current directory set on rerunning an IO-script.

build 435:
    CTRL+I shortcut.

build 434:
    Actions updated while awaiting a response from the card.

build 433:
    Default buttons added to child forms.

build 432:
    Lower bound check on patch start address removed.

build 431:
    The TimeOut period is no longer overwritten on every reset (perhaps it's time for a rewrite of the exec. module though...)
    Finally introducing the TActionList.

build 430:
    History added to the Execute Script button.
    Install Patch and Install Application buttons removed - now only appearing in the menus.

build 429:
    Pause instruction supported in IO-scripts. If coming across a 'Pause' (case-insensitive) instruction 
    Wojtek will await user confirmation before continuing.

build 428:
    Command type added to IO-log.

build 427:
    More detailed warning messages on script errors.

build 426:
    STK application loading, lower bound set to 0x0000.
    Version numbering changed from Version x.x.xx to Build xxx

version 4.0.25:
    Handling the situation where SCardEstablishContext fails.

version 4.0.24:
    PCSC support added... with a showel!

version 4.0.23:
    Bug removed from Aspects log replaying method - failing to recognize the procedure byte as an integer.

version 4.0.22:
    NULL byte counting bug removal - done right.

version 4.0.21:
    NULL byte counting bug removed.

version 4.0.20:
    Error removed in handling of comments on script lines ending with a "\".
    Override SPI added temporarily, the SMS-PP download code must be rewritten...later...version 4.0.19:
    Handling of Comprehension Required flags corrected (thx to MBA)
    'Load Binary File' button added to the 'Update Binary Extended' window.

version 4.0.18:
  The use of script wildcards ('?' and '*') simplified.
  We're matching from the end of the 'O:' line until reaching the first character of the line or a '*'.

  Examples:
    The card returns the output '85 14 27 76 7F 10 02 00 90 00'. 
    All of the following lines will match:

    O: 85 14 27 76 7F 10 02 00 90 00
    (default matching of all characters)

    O: 85 14 27 76 ?? ?? 02 00 90 00
    (ignoring the actual value of byte 5 and 6, matching only byte 1-4 and 7-10)
    

    O: 85 14 27 76 7F ?0 02 00 90 00  
    ('?' replacing a single nibble)

    O: 90 00                          
    (a valid match, however a 'Lengths of output lines differ!' warning is generated)

    O: * 90 00                        
    (as above, but no warning is generated)

    O: FF FF FF FF 85 14 27 76 7F 10 02 00 90 00 
    (a valid match, however a 'Lengths of output lines differ!' warning is generated)

version 4.0.17:
  Support for the #include directive added to the script interpreter.

  Syntax: #include <scriptname>

version 4.0.16:
  COM Port storing corrected.

version 4.0.15:
  COM Port stored to the registry.
  The SMS Packer now uses temporary files for the input/output.
  P3 will be calculated if the field has been left blank.

Version 4.0.14:
  SMS packer executable updated.
  IO-copy of the session appended to saved trace files.
  Use of existing registry keys altered and "Last accessed script file" key added.

Version 4.0.13
  ResetCard instruction added.

.
.
.

